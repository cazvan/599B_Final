ggplot(dfmelt2,aes(x=year, y = mentavg2)) +
labs(title=title1, x="Year", y="Days",caption=source1) +
geom_line(color="steelblue",aes(), show.legend = TRUE) +
#geom_vline(xintercept=2014) +
scale_x_continuous(breaks=c(2000:2017)) +
theme(panel.background = element_rect(fill = "white",colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 30, hjust = 1)) +
geom_hline(yintercept = mean(dfmelt2$mentavg2), #where
linetype="dashed",
size=1, #thickness
alpha=0.5)+
theme(legend.title = element_blank())+
annotate("text",x=2017,y=3.455,label="mean",size=3,alpha=0.7)
# Bi-variate Visualization: Line plot
## this plot shows the average mental health number reported each year for
## states that expanded ACA vs. states that didnt expand ACA
titlebi="Average Negative Mental Health Days Over Last 30 Days"
source1="BRFSS Survey Data 2000-2018"
ggplot(dfmelt, aes(x=year, y = mentavg, group = ex2014)) +
labs(title=titlebi, x="Years", y="Average Mental Health Days",caption=source1) +
geom_line(aes(color=ex2014)) +
geom_vline(xintercept=2014,size=1, alpha=0.5) +
scale_x_continuous(breaks=c(2000:2017)) +
theme(panel.background = element_rect(fill = "white",colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 30, hjust = 1))+
geom_hline(yintercept = mean(dfmelt2$mentavg2), #where
linetype="dashed",
size=1, #thickness
alpha=0.5)+
theme(legend.title = element_blank())+
annotate("text",x=2017,y=3.455,label="mean",size=3,alpha=0.7)+
annotate("text",x=2015.59,y=3.28,label="ACA Expension",size=3,alpha=0.7)+
scale_color_manual(values = c("steelblue","darkred"))
#scale_y_continuous(expand =
#facet_grid(ex2014~.) #gender? Income bracket?
#add mean behavior line? Add annotation instead of reference line for 2014?
# Multi-variate Visualization: line plot for sex, income, and education level:
## this plot shows the average mental health number reported each year for
## states that expanded ACA vs. states that didnt expand ACA
titlesex="Negative Mental Health Days by Sex by Expansion Group"
ggplot(dfsex, aes(x=year, y = mentavg, group = sex)) +
geom_line(aes(color=sex)) +
geom_vline(xintercept=2014) +
scale_x_continuous(breaks=c(2000:2017)) +
scale_y_continuous(breaks=c(1,1.2,1.4,1.6,1.8,2,2.2,2.4,2.6,2.8,3,3.2,3.4,3.6,3.8,4,4.2)) +
labs(title=titlesex, x="Year", y="Days",caption=source1) +
theme(panel.background = element_rect(fill = "white",colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 30, hjust = 1)) +
facet_grid(ex2014~.) +#gender? Income bracket? Income bracket?
geom_hline(yintercept = mean(dfmelt2$mentavg2), #where
linetype="dashed",
size=1, #thickness
alpha=0.5)+
theme(legend.title = element_blank())+
annotate("text",x=2017,y=3.55,label="mean",size=3,alpha=0.7)+
annotate("text",x=2012.5,y=2.25,label="ACA Expension",size=3,alpha=0.7)+
scale_color_manual(values = c("steelblue","darkred"))
#Data prep for multivariate visualization, averaging annual negative mental health days by year, sex, and expansion vs. non-expansion state
#pipe=%>% (this is from dplyr)
dfsex=brfssdata2%>% # name the new frame, use the second list
select(year, stab, mental, ex2014, sex)%>% #select the variables to be used
filter(stab %nin% bad)%>% #filter out the bad states
filter(!is.na(ex2014))%>% #filter out n/a answers from ex2014
group_by(sex,year,ex2014)%>% #group by sec, year, and ex2014 variables
mutate(mentavg=mean(mental, na.rm = TRUE))%>% #create a new variable for average mental days by sex,year, and expansion group
ungroup()%>% #ungroup the grouped variables
select(year, ex2014,mentavg,sex)%>% #select the 4 variables to be used
unique()%>% #group into unique answers
mutate(ex2014=ifelse(ex2014==0, "No ACA Expansion", "ACA Expansion"))%>% #rename expansion variable
filter((year!=2018)) #remove responses from 2018
#rename the binary sex variable to "male" and "female"
dfsex$sex <- ordered(dfsex$sex, #order the variable from 1 to 0
levels = c(1,0), #select the binary numbers
labels = c("Males", "Females")) # choose the new names
#View(dfsex)
#Univariate Visualization: barplot
source1="BRFSS Survey Data 2000-2018"
titlecount="Survey Count by Year"
yearplot=ggplot(data= brfssdata, aes(x=year)) +
geom_bar(stat = "count", fill="steelblue") +
labs(title=titlecount, x=NULL, y=NULL,caption=source1) +
scale_y_continuous(labels = scales::comma) +
scale_x_continuous(breaks=c(2000:2017)) +
theme(panel.background = element_rect(fill = "white",colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = -30, hjust = 0))
yearplot
#Univariate Visualization: Line Plot NEW YAY
source1="BRFSS Survey Data 2000-2018"
title1="Average Negative Mental Health Days Over Last 30 Days"
ggplot(dfmelt2,aes(x=year, y = mentavg2)) +
labs(title=title1, x="Year", y="Days",caption=source1) +
geom_line(color="steelblue",aes(), show.legend = TRUE) +
#geom_vline(xintercept=2014) +
scale_x_continuous(breaks=c(2000:2017)) +
theme(panel.background = element_rect(fill = "white",colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 30, hjust = 1)) +
geom_hline(yintercept = mean(dfmelt2$mentavg2), #where
linetype="dashed",
size=1, #thickness
alpha=0.5)+
theme(legend.title = element_blank())+
annotate("text",x=2017,y=3.455,label="mean",size=3,alpha=0.7)
# Multi-variate Visualization: line plot for sex, income, and education level:
## this plot shows the average mental health number reported each year for
## states that expanded ACA vs. states that didnt expand ACA
titlesex="Negative Mental Health Days by Sex by Expansion Group"
ggplot(dfsex, aes(x=year, y = mentavg, group = sex)) +
geom_line(aes(color=sex)) +
geom_vline(xintercept=2014) +
scale_x_continuous(breaks=c(2000:2017)) +
scale_y_continuous(breaks=c(1,1.2,1.4,1.6,1.8,2,2.2,2.4,2.6,2.8,3,3.2,3.4,3.6,3.8,4,4.2)) +
labs(title=titlesex, x="Year", y="Days",caption=source1) +
theme(panel.background = element_rect(fill = "white",colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 30, hjust = 1)) +
facet_grid(ex2014~.) +#gender? Income bracket? Income bracket?
geom_hline(yintercept = mean(dfmelt2$mentavg2), #where
linetype="dashed",
size=1, #thickness
alpha=0.5)+
theme(legend.title = element_blank())+
annotate("text",x=2017,y=3.55,label="mean",size=3,alpha=0.7)+
annotate("text",x=2012.5,y=2.25,label="ACA Expension",size=3,alpha=0.7)+
scale_color_manual(values = c("steelblue","darkred"))
library(ggplot2)
library(haven)
library(Rmisc)
library(ggpubr)
library(tibble)
library(ggrepel)
library(magrittr)
library(dplyr)
library(reshape2)
library(Hmisc)
library(dotwhisker)
library(broom)
library(pscl)
library(boot)
library(cowplot)
library(ggplot2)
library(haven)
library(Rmisc)
library(ggpubr)
library(tibble)
library(ggrepel)
library(magrittr)
library(dplyr)
library(reshape2)
library(Hmisc)
library(dotwhisker)
library(broom)
library(pscl)
library(boot)
library(cowplot)
brfssdata=read.csv("https://github.com/cazvan/599B_Final/raw/master/brfss.csv")
brfssdata2=read.csv("https://github.com/cazvan/599B_Final/raw/master/brfss2.csv")
#pipe=%>% (this is from dplyr)
dfmelt=brfssdata%>% #use main dataset
dplyr::select(year, stab, mental, ex2014)%>% #select these 4 variables for use
filter(stab %nin% bad)%>% # filter out bad states
filter(!is.na(ex2014))%>% #filter out n/a responses for ex2014 variable
group_by(year,ex2014)%>% # group responeses by year then ex2014
mutate(mentavg=mean(mental, na.rm = TRUE))%>% #create a new variable that is the average number of negative mental health days for each group created above
ungroup()%>% # ungroup the groups
select(year, ex2014,mentavg)%>% #select the year, ex2014, and newly created mentavg variables
unique()%>% #only look at unique responses
mutate(ex2014=ifelse(ex2014==0, "No Expansion", "Expansion")) #change the binary reponses to string responses
brfssdata$stab=as.character(brfssdata$stab) #convert stab into numeric
bad=unique(brfssdata$stab[(brfssdata$ex2014 == 0 & brfssdata$ex2016 == 1)]) #create a list of the bad states
bad # show us the bad states
#pipe=%>% (this is from dplyr)
dfmelt=brfssdata%>% #use main dataset
dplyr::select(year, stab, mental, ex2014)%>% #select these 4 variables for use
filter(stab %nin% bad)%>% # filter out bad states
filter(!is.na(ex2014))%>% #filter out n/a responses for ex2014 variable
group_by(year,ex2014)%>% # group responeses by year then ex2014
mutate(mentavg=mean(mental, na.rm = TRUE))%>% #create a new variable that is the average number of negative mental health days for each group created above
ungroup()%>% # ungroup the groups
select(year, ex2014,mentavg)%>% #select the year, ex2014, and newly created mentavg variables
unique()%>% #only look at unique responses
mutate(ex2014=ifelse(ex2014==0, "No Expansion", "Expansion")) #change the binary reponses to string responses
#View(dfmelt) # view the dataframe to verify results
#pipe=%>% (this is from dplyr)
dfmelt2=brfssdata%>% #use main dataset
select(year, stab, mental)%>% #select the 3 variables to be used
filter(stab %nin% bad)%>% # filter out the bad states
group_by(year)%>% # group by year
mutate(mentavg2=mean(mental, na.rm = TRUE))%>% # make a new variable for average negative mental days per year
ungroup()%>% # ungroup
select(year,mentavg2)%>% # select year and mentavg variables
unique() # only look at unique responses
#View(dfmelt2)
library(ggplot2)
library(haven)
library(Rmisc)
library(ggpubr)
library(tibble)
library(ggrepel)
library(magrittr)
library(dplyr)
library(reshape2)
library(Hmisc)
library(dotwhisker)
library(broom)
library(pscl)
library(boot)
library(cowplot)
brfssdata=read.csv("https://github.com/cazvan/599B_Final/raw/master/brfss.csv")
brfssdata2=read.csv("https://github.com/cazvan/599B_Final/raw/master/brfss2.csv")
library(ggplot2)
library(haven)
library(Rmisc)
library(ggpubr)
library(tibble)
library(ggrepel)
library(magrittr)
library(dplyr)
library(reshape2)
library(Hmisc)
library(dotwhisker)
library(broom)
library(pscl)
library(boot)
library(cowplot)
brfssdata=read.csv("https://github.com/cazvan/599B_Final/raw/master/brfss.csv")
brfssdata2=read.csv("https://github.com/cazvan/599B_Final/raw/master/brfss2.csv")
brfssdata$stab=as.character(brfssdata$stab) #convert stab into numeric
bad=unique(brfssdata$stab[(brfssdata$ex2014 == 0 & brfssdata$ex2016 == 1)]) #create a list of the bad states
bad # show us the bad states
#pipe=%>% (this is from dplyr)
dfmelt=brfssdata%>% #use main dataset
dplyr::select(year, stab, mental, ex2014)%>% #select these 4 variables for use
filter(stab %nin% bad)%>% # filter out bad states
filter(!is.na(ex2014))%>% #filter out n/a responses for ex2014 variable
group_by(year,ex2014)%>% # group responeses by year then ex2014
mutate(mentavg=mean(mental, na.rm = TRUE))%>% #create a new variable that is the average number of negative mental health days for each group created above
ungroup()%>% # ungroup the groups
select(year, ex2014,mentavg)%>% #select the year, ex2014, and newly created mentavg variables
unique()%>% #only look at unique responses
mutate(ex2014=ifelse(ex2014==0, "No Expansion", "Expansion")) #change the binary reponses to string responses
#View(dfmelt) # view the dataframe to verify results
#pipe=%>% (this is from dplyr)
dfmelt2=brfssdata%>% #use main dataset
select(year, stab, mental)%>% #select the 3 variables to be used
filter(stab %nin% bad)%>% # filter out the bad states
group_by(year)%>% # group by year
mutate(mentavg2=mean(mental, na.rm = TRUE))%>% # make a new variable for average negative mental days per year
ungroup()%>% # ungroup
select(year,mentavg2)%>% # select year and mentavg variables
unique() # only look at unique responses
#View(dfmelt2)
dfsex=brfssdata2%>% # name the new frame, use the second list
select(year, stab, mental, ex2014, sex)%>% #select the variables to be used
filter(stab %nin% bad)%>% #filter out the bad states
filter(!is.na(ex2014))%>% #filter out n/a answers from ex2014
group_by(sex,year,ex2014)%>% #group by sec, year, and ex2014 variables
mutate(mentavg=mean(mental, na.rm = TRUE))%>% #create a new variable for average mental days by sex,year, and expansion group
ungroup()%>% #ungroup the grouped variables
select(year, ex2014,mentavg,sex)%>% #select the 4 variables to be used
unique()%>% #group into unique answers
mutate(ex2014=ifelse(ex2014==0, "No ACA Expansion", "ACA Expansion"))%>% #rename expansion variable
filter((year!=2018)) #remove responses from 2018
#rename the binary sex variable to "male" and "female"
dfsex$sex <- ordered(dfsex$sex, #order the variable from 1 to 0
levels = c(1,0), #select the binary numbers
labels = c("Males", "Females")) # choose the new names
#View(dfsex)
#Univariate Visualization: barplot
source1="BRFSS Survey Data 2000-2018" #source
titlecount="Survey Count by Year" #title for the plot
yearplot=ggplot(data= brfssdata, aes(x=year)) + # create the yearplot object using the main dataset
geom_bar(stat = "count", fill="steelblue") + # make the yearplot into a barplot, color it
labs(title=titlecount, x=NULL, y=NULL,caption=source1) + # use the labels created above
scale_y_continuous(labels = scales::comma) + # set the scale for the y axis
scale_x_continuous(breaks=c(2000:2017)) + # set the scale for the years on the x axis
theme(panel.background = element_rect(fill = "white",colour = "grey50"), # choose background colors
plot.caption = element_text(hjust = 0), # default was 1 #set caption position
plot.title = element_text(hjust = 0.5), # set title position
axis.text.x = element_text(angle = -30, hjust = 0)) # adjust the x axis labels
yearplot # display the year plot
source1="BRFSS Survey Data 2000-2018" #source
title1="Average Negative Mental Health Days Over Last 30 Days" #title for the plot
ggplot(dfmelt2,aes(x=year, y = mentavg2)) + #create the lineplot using the new dataset
labs(title=title1, x="Year", y="Days",caption=source1) + # use the labels created above
geom_line(color="steelblue",aes(), show.legend = TRUE) + # color the line
scale_x_continuous(breaks=c(2000:2017)) + #showing the exact year changes from 2000 to 2017 on x axis
theme(panel.background = element_rect(fill = "white",colour = "grey50"), # add plot theme and background colors
plot.caption = element_text(hjust = 0), # default was 1, set caption position
plot.title = element_text(hjust = 0.5), # set title position
axis.text.x = element_text(angle = 30, hjust = 1)) + # adjust the x axis labels
geom_hline(yintercept = mean(dfmelt2$mentavg2), # add horizontal average line
linetype="dashed", # make a dashed line
size=1, # change the line thickness
alpha=0.5)+ # change the line depth
geom_vline(xintercept=2014,size=1, alpha=0.5) + # add the vertical Expansion line on year 2014
theme(legend.title = element_blank())+ # get rid of legend title
annotate("text",x=2017,y=3.455,label="mean",size=3,alpha=0.7) # position the label
# Bi-variate Visualization: Line plot
## this plot shows the average mental health number reported each year for states that expanded ACA vs. states that didnt expand ACA.
titlebi="Average Negative Mental Health Days Over Last 30 Days" # source
source1="BRFSS Survey Data 2000-2018" # title for the plot
ggplot(dfmelt, aes(x=year, y = mentavg, group = ex2014)) + # create the line plot using the new dataset
labs(title=titlebi, x="Years", y="Average Mental Health Days",caption=source1) + # use the labels create above
geom_line(aes(color=ex2014)) + # add the lines for each catagory
geom_vline(xintercept=2014,size=1, alpha=0.5) + # add the vertical Expansion line on year 2014
scale_x_continuous(breaks=c(2000:2017)) + # change the x axis breaks to show each year from 2000 to 2017
theme(panel.background = element_rect(fill = "white",colour = "grey50"), # change the background color
plot.caption = element_text(hjust = 0), # default was 1, set caption position
plot.title = element_text(hjust = 0.5), # set title position
axis.text.x = element_text(angle = 30, hjust = 1))+ # adjust the x axis labels
geom_hline(yintercept = mean(dfmelt2$mentavg2), # add horizontal average line
linetype="dashed", # make a dashed line
size=1, # change the line thickness
alpha=0.5)+ # change line depth
theme(legend.title = element_blank())+ # get rid of the legend title
annotate("text",x=2017,y=3.455,label="mean",size=3,alpha=0.7)+ # position the mean label
annotate("text",x=2015.59,y=3.28,label="ACA Expansion",size=3,alpha=0.7)+ # position the ACA Expension label
scale_color_manual(values = c("steelblue","darkred")) # manually change the line colors
#scale_y_continuous(expand =
#facet_grid(ex2014~.) #gender? Income bracket?
#add mean behavior line? Add annotation instead of reference line for 2014?
# Multi-variate Visualization: line plot for sex, income, and education level:
## this plot shows the average mental health number reported each year for
## states that expanded ACA vs. states that didnt expand ACA
titlesex="Negative Mental Health Days by Sex by Expansion Group" #give a title to the graph
ggplot(dfsex, aes(x=year, y = mentavg, group = sex)) + #create a lineplot using dfsex frame
geom_line(aes(color=sex)) + # add a line to mark average mental days for 2 groups
geom_vline(xintercept=2014) + #add a vertical line to mark expansion year
scale_x_continuous(breaks=c(2000:2017)) + #include years 2000-2017
scale_y_continuous(breaks=c(1,1.2,1.4,1.6,1.8,2,2.2,2.4,2.6,2.8,3,3.2,3.4,3.6,3.8,4,4.2)) +
#adjusting the y axis scale
labs(title=titlesex, x="Year", y="Days",caption=source1) + #give labels to the axis and     adding source
theme(panel.background = element_rect(fill = "white",colour = "grey50"), #change background                               color
plot.caption = element_text(hjust = 0),# adjust caption position
plot.title = element_text(hjust = 0.5), # adjust title position
axis.text.x = element_text(angle = 30, hjust = 1)) + #adjust x                                axis to have an angle
facet_grid(ex2014~.) + #create two graphs according to ex2014
geom_hline(yintercept = mean(dfmelt2$mentavg2), #dd a horizontal line for the total mean
linetype="dashed", #type of line
size=1, #thickness
alpha=0.5)+ #transparency
theme(legend.title = element_blank())+ #get rid of the legend title
annotate("text",x=2017,y=3.55,label="mean",size=3,alpha=0.7)+ #position text 'mean'
annotate("text",x=2012.5,y=2.25,label="ACA Expansion",size=3,alpha=0.7)+ #position text 'ACA   Expansion'
scale_color_manual(values = c("steelblue","darkred")) #manually add the colors to the lines   for males/females
#starting with a simple model, adding independent variables and tidying along the way
#1
reg1=lm(as.numeric(mental)~year,data=brfssdata2)
regression1 = tidy(reg1) %>%
mutate(model = "Model 1")
library(ggplot2)
library(haven)
library(Rmisc)
library(ggpubr)
library(tibble)
library(ggrepel)
library(magrittr)
library(dplyr)
library(reshape2)
library(Hmisc)
library(dotwhisker)
library(broom)
library(pscl)
library(boot)
library(cowplot)
#starting with a simple model, adding independent variables and tidying along the way
#1
reg1=lm(as.numeric(mental)~year,data=brfssdata2)
regression1 = tidy(reg1) %>%
mutate(model = "Model 1")
#2
reg2=lm(as.numeric(mental)~year+ex2014,data=brfssdata2)
regression2=tidy(reg2) %>%
mutate(model = "Model 2")
#3
reg3=lm(as.numeric(mental)~year+ex2014+sex,data=brfssdata2)
regression3=tidy(reg3) %>%
mutate(model = "Model 3")
#4
reg4=lm(as.numeric(mental)~year+ex2014+sex+job,data=brfssdata2)
View(brfssdata2)
View(brfssdata2)
View(brfssdata)
View(brfssdata)
#starting with a simple model, adding independent variables and tidying along the way
#1
reg1=lm(as.numeric(mental)~year,data=brfssdata2)
regression1 = tidy(reg1) %>%
mutate(model = "Model 1")
#2
reg2=lm(as.numeric(mental)~year+ex2014,data=brfssdata2)
regression2=tidy(reg2) %>%
mutate(model = "Model 2")
#3
reg3=lm(as.numeric(mental)~year+ex2014+sex,data=brfssdata2)
regression3=tidy(reg3) %>%
mutate(model = "Model 3")
#let's see the results
summary(reg3)
zigb <- zeroinfl(mental ~ year + ex2014 + sex, data = brfssdata2)
library(ggplot2)
library(haven)
library(Rmisc)
library(ggpubr)
library(tibble)
library(ggrepel)
library(magrittr)
library(dplyr)
library(reshape2)
library(Hmisc)
library(dotwhisker)
library(broom)
library(pscl)
library(boot)
library(cowplot)
zigb <- zeroinfl(mental ~ year + ex2014 + sex, data = brfssdata2)
summary(zigb)
zigb1 = tidy(zigb) %>%
mutate(model = "zigb1")
dwplot(zigb1)
allmodels=rbind(regression1,regression2,regression3,regression4)
allmodels=rbind(regression1,regression2,regression3)
dwplot(allmodels, vline = geom_vline(xintercept = 0, colour = "grey50", linetype = 2,alpha=0.6)) +
xlab("Coefficient Estimates") +
ylab("") +
ggtitle("Estimation of Coefficents for All Models") +
theme(axis.text.y = element_text(size=10, angle = 0),
axis.text.x = element_text(size=10),
plot.title = element_text(size = 12, hjust = 0.5),
plot.caption = element_text(hjust = 1, vjust = -1.2),
axis.title.y = element_text(size = 11, hjust = 0.5, vjust = 1.75),
axis.title.x = element_text(size = 11, hjust = 0.5, vjust = -1.25)+
allmodels=rbind(regression1,regression2,regression3)
dwplot(allmodels, vline = geom_vline(xintercept = 0, colour = "grey50", linetype = 2,alpha=0.6)) +
xlab("Coefficient Estimates") +
ylab("") +
ggtitle("Estimation of Coefficents for All Models") +
theme(axis.text.y = element_text(size=10, angle = 0),
axis.text.x = element_text(size=10),
plot.title = element_text(size = 12, hjust = 0.5),
plot.caption = element_text(hjust = 1, vjust = -1.2),
axis.title.y = element_text(size = 11, hjust = 0.5, vjust = 1.75),
axis.title.x = element_text(size = 11, hjust = 0.5, vjust = -1.25)+
allmodels=rbind(regression1,regression2,regression3)
dwplot(allmodels, vline = geom_vline(xintercept = 0, colour = "grey50", linetype = 2,alpha=0.6)) +
xlab("Coefficient Estimates") +
ylab("") +
ggtitle("Estimation of Coefficents for All Models") +
theme(axis.text.y = element_text(size=10, angle = 0),
axis.text.x = element_text(size=10),
plot.title = element_text(size = 12, hjust = 0.5),
plot.caption = element_text(hjust = 1, vjust = -1.2),
axis.title.y = element_text(size = 11, hjust = 0.5, vjust = 1.75),
axis.title.x = element_text(size = 11, hjust = 0.5, vjust = -1.25)
summary(reg3)
#starting with a simple model, adding independent variables and tidying along the way
#1
reg1=lm(as.numeric(mental)~year,data=brfssdata2)
regression1 = tidy(reg1) %>%
mutate(model = "Model 1")
#2
reg2=lm(as.numeric(mental)~year+ex2014,data=brfssdata2)
regression2=tidy(reg2) %>%
mutate(model = "Model 2")
#3
reg3=lm(as.numeric(mental)~year+ex2014+sex,data=brfssdata2)
regression3=tidy(reg3) %>%
mutate(model = "Model 3")
allmodels=rbind(regression1,regression2,regression3)
dwplot(allmodels, vline = geom_vline(xintercept = 0, colour = "grey50", linetype = 2,alpha=0.6)) +
xlab("Coefficient Estimates") +
ylab("") +
ggtitle("Estimation of Coefficents for All Models") +
theme(axis.text.y = element_text(size=10, angle = 0),
axis.text.x = element_text(size=10),
plot.title = element_text(size = 12, hjust = 0.5),
plot.caption = element_text(hjust = 1, vjust = -1.2),
axis.title.y = element_text(size = 11, hjust = 0.5, vjust = 1.75),
axis.title.x = element_text(size = 11, hjust = 0.5, vjust = -1.25)
allmodels=rbind(regression1,regression2,regression3,regression3)
dwplot(allmodels, vline = geom_vline(xintercept = 0, colour = "grey50", linetype = 2,alpha=0.6)) +
xlab("Coefficient Estimates") +
ylab("") +
ggtitle("Estimation of Coefficents for All Models") +
theme(axis.text.y = element_text(size=10, angle = 0),
axis.text.x = element_text(size=10),
plot.title = element_text(size = 12, hjust = 0.5),
plot.caption = element_text(hjust = 1, vjust = -1.2),
axis.title.y = element_text(size = 11, hjust = 0.5, vjust = 1.75),
axis.title.x = element_text(size = 11, hjust = 0.5, vjust = -1.25)
allmodels=rbind(regression1,regression2,regression3)
dwplot(allmodels, vline = geom_vline(xintercept = 0, colour = "grey50", linetype = 2,alpha=0.6)) +
xlab("Coefficient Estimates") +
ylab("") +
ggtitle("Estimation of Coefficents for All Models") +
theme(axis.text.y = element_text(size=10, angle = 0),
axis.text.x = element_text(size=10),
plot.title = element_text(size = 12, hjust = 0.5),
plot.caption = element_text(hjust = 1, vjust = -1.2),
axis.title.y = element_text(size = 11, hjust = 0.5, vjust = 1.75),
axis.title.x = element_text(size = 11, hjust = 0.5, vjust = -1.25))
